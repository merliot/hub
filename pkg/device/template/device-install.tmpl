#!/bin/bash

# Autogenerated from device-install.tmpl

SERVICE="{{.service}}"
TARGET="merliot.target"

function remove_logging() {
	echo "Removing logging for device $SERVICE..."
	rm -f /etc/rsyslog.d/$SERVICE.conf
	systemctl restart rsyslog.service
}

function remove_target() {
	# Get the list of dependencies, excluding the target itself
	DEPENDENCIES=$(systemctl list-dependencies "$TARGET" --plain | grep -v "$TARGET")

	if [ -z "$DEPENDENCIES" ]; then
		echo "Removing systemd target for devices..."
		rm -f /lib/systemd/system/$TARGET
		systemctl daemon-reload
	fi
}

function remove_service() {
	echo "Removing systemd service for device $SERVICE..."
	systemctl stop $SERVICE
	systemctl disable $SERVICE
	rm -f /lib/systemd/system/$SERVICE.service
	systemctl daemon-reload
	rm -rf /var/lib/$SERVICE
}

function remove_device() {
	echo "Removing device $SERVICE..."
	rm -f /usr/local/bin/$SERVICE
}

function install_file() {
	local src_name=$1
	local dst_name=$2
	local mode=$3

	cp $src_name $dst_name
	chmod $mode $dst_name
}

function install_device() {
	echo "Installing device $SERVICE..."
	systemctl stop $SERVICE >/dev/null 2>&1
	install_file "bin/device-{{target}}" "/usr/local/bin/$SERVICE" 0755
}

function install_logging() {
	echo "Installing logging for device $SERVICE..."
	install_file "$SERVICE.conf" "/etc/rsyslog.d/$SERVICE.conf" 0644
	systemctl restart rsyslog.service
}

function install_target() {
	# Get the list of dependencies, excluding the target itself
	DEPENDENCIES=$(systemctl list-dependencies "$TARGET" --plain | grep -v "$TARGET")
	if [ -z "$DEPENDENCIES" ]; then
		echo "Installing systemd target for devices..."
		install_file $TARGET "/lib/systemd/system/$TARGET" 0644
	fi
}

function install_service() {
	echo "Installing systemd service for device $SERVICE..."
	mkdir -p /var/lib/$SERVICE
	install_file "$SERVICE.service" "/lib/systemd/system/$SERVICE.service" 0644
	systemctl daemon-reload
	systemctl enable $SERVICE
	systemctl restart $SERVICE
}

function check_rsyslog() {
	if [ ! -d /etc/rsyslog.d ]; then
		echo "Error: rsyslog is not installed. Install it with 'sudo apt install rsyslog'."
		exit 1
	fi
}

function uninstall() {
	remove_service
	remove_target
	remove_logging
	remove_device
}

function install() {
	check_rsyslog
	install_device
	install_logging
	install_target
	install_service
}

# Main
if [ "$EUID" -ne 0 ]; then
	echo "Installer must be run as root."
	exit 1
fi

if [[ "$1" == "-u" ]]; then
	uninstall
else
	install
fi

echo "Success!"
